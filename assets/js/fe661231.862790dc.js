"use strict";(self.webpackChunkgraphql_kotlin_docs=self.webpackChunkgraphql_kotlin_docs||[]).push([[713],{77317:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var n=r(74848),o=r(28453);const a={id:"federation-tracing",title:"Federation Tracing"},i=void 0,d={id:"schema-generator/federation/federation-tracing",title:"Federation Tracing",description:"Support for Apollo Federation tracing is added to the graphql-kotlin-federation package by using the apollographql/federation-jvm library.",source:"@site/versioned_docs/version-4.x.x/schema-generator/federation/federation-tracing.md",sourceDirName:"schema-generator/federation",slug:"/schema-generator/federation/federation-tracing",permalink:"/graphql-kotlin/docs/4.x.x/schema-generator/federation/federation-tracing",draft:!1,unlisted:!1,editUrl:"https://github.com/ExpediaGroup/graphql-kotlin/tree/master/website/versioned_docs/version-4.x.x/schema-generator/federation/federation-tracing.md",tags:[],version:"4.x.x",lastUpdatedBy:"Samuel Vazquez",lastUpdatedAt:1746721801e3,frontMatter:{id:"federation-tracing",title:"Federation Tracing"},sidebar:"docs",previous:{title:"Federated Type Resolution",permalink:"/graphql-kotlin/docs/4.x.x/schema-generator/federation/type-resolution"},next:{title:"GraphQLServer",permalink:"/graphql-kotlin/docs/4.x.x/server/graphql-server"}},s={},c=[{value:"<code>FederatedGraphQLContext</code>",id:"federatedgraphqlcontext",level:3}];function l(e){const t={a:"a",code:"code",h3:"h3",p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Support for Apollo Federation tracing is added to the ",(0,n.jsx)(t.code,{children:"graphql-kotlin-federation"})," package by using the ",(0,n.jsx)(t.a,{href:"https://github.com/apollographql/federation-jvm",children:"apollographql/federation-jvm"})," library."]}),"\n",(0,n.jsx)(t.h3,{id:"federatedgraphqlcontext",children:(0,n.jsx)(t.code,{children:"FederatedGraphQLContext"})}),"\n",(0,n.jsxs)(t.p,{children:["To best support tracing, the context must implement a specific method to get the HTTP headers from the request.\nThis is done by implementing the ",(0,n.jsx)(t.code,{children:"FederatedGraphQLContext"})," interface instead of just the ",(0,n.jsx)(t.code,{children:"GraphQLContext"})," interface from ",(0,n.jsx)(t.code,{children:"graphql-kotlin-schema-generator"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>d});var n=r(96540);const o={},a=n.createContext(o);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);